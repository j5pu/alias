#!/bin/sh
# shellcheck disable=SC2064

#
# sources files in alias repository

set -eu

cd "$(dirname "$0")/.."

#
# Force creation of .env.sh _env_arg
: "${ENV_FORCE=0}"

#
# ENV _env_arg
_ENV_FILE="$(pwd -P)/.env.sh"

_ENV_TMP="$(mktemp)"
_ENV_CHANGED=false

_echo_env_sh_export() { echo "  export ${1}=\"${2}\"" >> "${_ENV_TMP}"; }

_echo_env_sh_source() {
  for _echo_env_sh_source in "$1"/*; do
    case "${_echo_env_sh_source##*/}" in
      .DS_Store | .gitkeep | .localized) continue ;;
      sudo.sh) [ "${SUDO-}" ] || continue ;;
    esac
    echo "  . \"${_echo_env_sh_source}\"" >>"${_ENV_TMP}"
  done

  unset _echo_env_sh_source
}

_gen_env_dirs() {
  $_ENV_CHANGED || return 0
  for _gen_env_dir in ${ENV_SUPPORTED}; do

    find "${ENV_GENERATED}" -mindepth 2 -maxdepth 2 -type d | while read -r _gen_env_dir_generated; do
        _gen_env_dir_generated_absolute="${_gen_env_dir_generated}/${_gen_env_dir}"
        case "${_gen_env_dir}" in
          rhel|rhel_fedora)
            cd "${_gen_env_dir_generated}"
            ! test -e "${_gen_env_dir}" || rm -r "${_gen_env_dir}"
            ln -s fedora "${_gen_env_dir}"
            ;;
          *)
            mkdir -p "${_gen_env_dir_generated_absolute}"
            touch "${_gen_env_dir_generated_absolute}/.gitkeep"
            ;;
        esac
      done

    { find "${ENV_ETC}" -mindepth 2 -maxdepth 2 -type d -not -name "bash_completion.d"; \
      echo "${ENV_ETC}/functions"; }| while read -r _gen_env_dir_etc; do
        _gen_env_dir_etc_absolute="${_gen_env_dir_etc}/${_gen_env_dir}"
        case "${_gen_env_dir}" in
          rhel|rhel_fedora)
            cd "${_gen_env_dir_etc}"
            ! test -e "${_gen_env_dir}" || rm -r "${_gen_env_dir}"
            ln -s fedora "${_gen_env_dir}"
            ;;
          *)
            mkdir -p "${_gen_env_dir_etc_absolute}"
            touch "${_gen_env_dir_etc_absolute}/.gitkeep"
            ;;
        esac
        [ "${_gen_env_dir_etc##*/}" = hooks.d ] || continue
        for _gen_env_dir_etc_shell in sh bash bash-4 zsh; do
          _gen_env_dir_etc_absolute="${_gen_env_dir_etc}/${_gen_env_dir}/${_gen_env_dir_etc_shell}"
          case "${_gen_env_dir}" in
            rhel|rhel_fedora) : ;;
            *)
              mkdir -p "${_gen_env_dir_etc_absolute}"
              touch "${_gen_env_dir_etc_absolute}/.gitkeep"
              ;;
          esac
        done
      done
  done

  test -f "${ENV_ETC_BASH_COMPLETION_D}/.gitkeep" || touch "${ENV_ETC_BASH_COMPLETION_D}/.gitkeep"

  for _gen_env_dir_home in profile.d rc.d; do
    _gen_env_dir_home_absolute="${ENV_TOP}/custom/${_gen_env_dir_home}"
    test -f "${_gen_env_dir_home_absolute}/.gitkeep" \
      || {
        mkdir -p "${_gen_env_dir_home_absolute}"
        touch "${_gen_env_dir_home_absolute}/.gitkeep"
      }
  done

  unset _gen_env_dir _gen_env_dir_absolute _gen_env_dir_generated_absolute \
    _gen_env_dir_etc _gen_env_dir_etc_absolute _gen_env_dir_etc_shell _gen_env_dir_home _gen_env_dir_home_absolute
}

_gen_env_sh_vars_export() {
  if ! test -f "${_ENV_FILE}" || test "${ENV_FORCE}" -eq 1; then
    _ENV_CHANGED=true
    cat > "${_ENV_TMP}" <<EOF
# shellcheck shell=sh

#
# System wide POSIX profile
# Generated by $0

#
# Env profile vars has been sourced already
: "\${ENV_VARS_SOURCED=0}"; export ENV_PROFILE_SOURCED

if ! echo "\${PATH}" | grep -q "$(pwd -P)/bin:" || test "\${ENV_VARS_SOURCED}" -eq 0; then
  export ENV_VARS_SOURCED=1
EOF
    _echo_env_sh_export PATH "$(pwd -P)/bin:\${PATH}"
    _echo_env_sh_export ID_LIKE "$(! test -f /etc/os-release || grep "^ID_LIKE=" /etc/os-release \
      || grep "^ID=" /etc/os-release | cut -d= -f2 | tr ' ' '_')"
    _echo_env_sh_export ENV_ETC "$(pwd -P)/etc"
    _echo_env_sh_export ENV_CUSTOM "$(pwd -P)/custom"
    _echo_env_sh_export ENV_ETC_BASH_COMPLETION_D "$(pwd -P)/etc/bash_completion.d"
    _echo_env_sh_export ENV_ETC_PROFILE_D "$(pwd -P)/etc/rc.d"
    _echo_env_sh_export ENV_ETC_RC_D "$(pwd -P)/etc/rc.d"
    _echo_env_sh_export ENV_GENERATED "$(pwd -P)/generated"
    _echo_env_sh_export ENV_GENERATED_ALIASES_D "$(pwd -P)/generated/aliases.d"
    _echo_env_sh_export ENV_GENERATED_ALIASES_D_HOSTNAME "$(pwd -P)/generated/aliases.d/${HOSTNAME=$(hostname)}"
    _echo_env_sh_export ENV_GENERATED_USERS_D "$(pwd -P)/generated/users.d"
    _echo_env_sh_export ENV_GENERATED_VARS_D "$(pwd -P)/generated/vars.d"
    _echo_env_sh_export ENV_SUPPORTED "arch common Darwin debian fedora Linux rhel rhel_fedora \
      ${HOSTNAME=$(hostname)}"
    _echo_env_sh_export ENV_TOP "$(pwd -P)"
    _echo_env_sh_export HOSTNAME "${HOSTNAME=$(hostname)}"
    _echo_env_sh_export MACOS "$(if test "$(uname -s)" = "Darwin"; then echo "true"; else echo "false"; fi)"
    _echo_env_sh_export SUDO "$(if test -x /usr/bin/sudo; then echo /usr/bin/sudo; else echo ""; fi)"
    _echo_env_sh_export UNAME "$(uname -s)"
    echo "fi" >> "${_ENV_TMP}"
  fi
}

_gen_env_sh_etc_profile_d_source() {
  $_ENV_CHANGED || return 0
}

_gen_env_sh_etc_rc_d_source() {
  $_ENV_CHANGED || return 0

  cat >>"${_ENV_TMP}" <<EOF

#
# RC for interactive shells has been sourced already
: "\${ENV_RC_SOURCED=0}"

if { [ "\${PS1-}" ] || echo "\$-" | grep -q i; } && test "\${ENV_RC_SOURCED}" -eq 0; then \
  ENV_RC_SOURCED=1
  unalias cp egrep fgrep grep l l. la ll lld ls mv rm xzegrep xzfgrep xzgrep zegrep zfgrep zgrep 2>/dev/null
EOF
  for _gen_env_sh_rc_source in \
    $(! has complete || echo "${ENV_ETC_BASH_COMPLETION_D}") \
    "${ENV_ETC_PROFILE_D}/constants.d" \
    "${ENV_ETC_PROFILE_D}/functions.d" \
    "${ENV_ETC_PROFILE_D}/vars.d" \
    "${ENV_ETC_RC_D}/aliases.d" \
    "${ENV_ETC_RC_D}/hooks.d" \
    "${ENV_GENERATED_ALIASES_D}/common" \
    "${ENV_GENERATED_ALIASES_D}/${HOSTNAME}" \
    "${ENV_GENERATED_ALIASES_D}/${UNAME}" \
    $([ ! "${ID_LIKE-}" ] || echo "${ENV_GENERATED_ALIASES_D}/${ID_LIKE}") \
    "${HOME}/.profile.d" \
    "${HOME}/.rc.d"; do
    _echo_env_sh_source "${ENV_TOP}/${_gen_env_sh_rc_source}"
  done

  cat >>"${_ENV_TMP}" <<EOF
fi

export ENV="\${ENV_FILE}"
EOF

  unset _gen_env_sh_rc_source
}

_gen_env_sh_vars_export

if $_ENV_CHANGED; then
  . "${_ENV_TMP}"
  _gen_env_dirs

  mv "${_ENV_TMP}" "${_ENV_FILE}"
  envsync

fi

unset -f _echo_env_sh_export _echo_env_sh_source _gen_env_dirs _gen_env_sh_profile _gen_env_sh_rc
