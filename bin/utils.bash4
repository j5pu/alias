# shellcheck shell=bash

#
# Utils Library for BASH4

# RC: utils.bash4 has been sourced already
#
: "${_RC_UTILS_BASH4_SOURCED=0}"
[ "${_RC_UTILS_BASH4_SOURCED}" -eq 0 ] || return 0 2>/dev/null || exit 0
_RC_UTILS_BASH4_SOURCED=1

# true (bool) if BASH greater or equal to 4
# sh as bash (3) exported functions are not seen as exported
# sh as bash (3) has arrays
# Exported arrays are not available in a new shell, but they are in a subshell
BASH4=false
if [ "${BASH_VERSION%%.*}" -ge 4 ]; then
  BASH4=true
  # <html><h2>Running Shell</h2>
  # <p><strong><code>$SH</code></strong> posix-<ash|busybox|dash|ksh|sh>, zsh, sh for bash sh, bash or bash4.</p>
  # </html>
  SH="bash4"
  # Hook for shell-specific initialization (zsh or bash).
  #
  SH_HOOK="${SH%4*}"
  # Shared array to copy array used by cparray(), getkey(), getvalue() and inarray()
#
  declare -Axg _ARRAY
fi

####################################### Source: BASH. KSH and SH
#
. "${BASH_SOURCE%4*}"


####################################### BASH4
#
$BASH4 || $ZSH || return 0 2>/dev/null || exit 0

echo "BASH4: $BASH4, RC: ${RC}, SH: $SH, SH_HOOK: ${SH_HOOK}, ZSH: $ZSH"
