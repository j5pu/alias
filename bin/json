#!/bin/sh

#
# To vars if starts with '{' or to json
# Usage:
#   echo "\"{\"foo\":\"1\",\"bar\":\"2\"}\"" | json
#   json "\"{\"foo\":\"1\",\"bar\":\"2\"}\""
#   echo "{\"foo\":\"1\",\"bar\":\"2\"}" | json
#   json "{\"foo\":\"1\",\"bar\":\"2\"}"
#   printf "%s\n" foo 1 bar 2 | json
#   json foo 1 bar 2

help() {
  rc=$?

  >&2 cat <<EOF
usage: ${0##*/} <json|var value>
   or: <json|var value> | ${0##*/}

to json or from json to variables

Commands:
   -h, --help   display this help and exit.

Examples:
  echo "\"{\"foo\":\"1\",\"bar\":\"2\"}\"" | ${0##*/}
  ${0##*/} "\"{\"foo\":\"1\",\"bar\":\"2\"}\""
  echo "{\"foo\":\"1\",\"bar\":\"2\"}" | ${0##*/}
  ${0##*/} "{\"foo\":\"1\",\"bar\":\"2\"}"
  printf "%s\n" foo 1 bar 2 | ${0##*/}
  ${0##*/} foo 1 bar 2
EOF
  exit $rc
}

main() {
  [ $# -ne 0 ] || help

  echo=false; json="{"; odd=true

  for arg; do
    case "$arg" in
      '^{'*|'"{'*|"{\""*)
        echo "${arg}" | sed -E 's/","/"\x7"/g; s/":"/=/g; s/(^{|^"{|}$|}"$)//g' | tr "\7" "\n"
#        | while IFS=: read -r var value; do
#          echo "$(echo "${var}" | tr -d \" )=${value}"
#        done
#        echo "${arg}" | sed -E 's/(^{|^"{|}$|}"$)//g' | tr "," "\n" | while IFS=: read -r var value; do
#          echo "$(echo "${var}" | tr -d \" )=${value}"
#        done
        ;;
      --help|-h) help ;;
      *)
        [ $(($#%2)) -eq 0 ] || { >&2 echo "${0##*/}: odd ($#) number of argument(s) given, but even number of\
 arguments is needed to convert to json: ${arg}"; exit 1; }
        echo=true
        json="${json}\"${arg}\""
        if $odd; then
          json="${json}:"; odd=false
        else
          json="${json},"; odd=true
        fi
        ;;
    esac
  done
  ! $echo || echo "${json}" | sed 's/,$/}/'
}

if test -s /dev/stdin; then
  while read -r word; do
    set -- "$@" "${word}"
  done
fi

main "$@"
